openapi: 3.0.3
info:
  title: Product
  description: 'Description of the transport model of the product'
  version: 0.0.1
paths:
  /create:
    post:
      tags:
        - product
      summary: Create a new product
      operationId: createProduct
      requestBody:
        description: The request object to create a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductResponse'
  /read:
    post:
      tags:
        - product
      summary: Get information about an product
      operationId: readProduct
      requestBody:
        description: The request object to obtain a product information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadProductRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadProductResponse'

  /update:
    post:
      tags:
        - product
      summary: Update the product
      operationId: updateProduct
      requestBody:
        description: The request object for product updating
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductResponse'

  /delete:
    post:
      tags:
        - product
      summary: Delete the product
      operationId: deleteProduct
      requestBody:
        description: The request object to delete the product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProductRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductResponse'

  /search:
    post:
      tags:
        - product
      summary: Search the products
      operationId: searchProducts
      requestBody:
        description: The request object to search the products
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProductRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductResponse'

components:
  schemas:

    CreatableProduct:
      type: object
      description: The structure with data about the product to request about creation
      properties:
        productId:
          type: string
          description: Product ID
        authorId:
          type: string
          description: Author ID
        category:
          type: string
          description: Category of product
        productName:
          type: string
          description: Product name
        caloriesPerHundredGrams:
          type: number
          format: double
          description: Product calorie content
        proteinsPerHundredGrams:
          type: number
          format: double
          description: Product protein content
        fatsPerHundredGrams:
          type: number
          format: double
          description: Product fat content
        carbohydratesPerHundredGrams:
          type: number
          format: double
          description: Product carbohydrate content

    UpdatableProduct:
      description: Structure for a data about the product in request to update
      allOf:
        - $ref: '#/components/schemas/CreatableProduct'
        - type: object
          properties:
            productId:
              type: string
              description: ID of the updated object

    CreateProductRequest:
      description: The structure to request for create product
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseRequest'
        - type: object
          properties:
            createProduct:
              $ref: '#/components/schemas/CreatableProduct'
            debug:
              allOf:
                - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - error

    CreateProductResponse:
      description: The structure to respond to a request about the declaration an product
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseResponse'
        - type: object
          properties:
            createProduct:
              $ref: '#/components/schemas/ResponseProduct'

    ResponseProduct:
      description: The structure describing the product in the response
      allOf:
        - $ref: '#/components/schemas/UpdatableProduct'
        - type: object
          properties:
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: './spec-fitChanges-api.yaml#/components/schemas/Permissions'

    ReadProductRequest:
      description: The structure to get product
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseRequest'
        - type: object
          properties:
            readProductId:
              type: string
            debug:
              allOf:
                - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb
    ReadProductResponse:
      description: The structure to respond to a request with a product information
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseResponse'
        - type: object
          properties:
            readProduct:
              $ref: '#/components/schemas/ResponseProduct'

    UpdateProductRequest:
      description: The structure to update the product
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseRequest'
        - type: object
          properties:
            updateProduct:
              $ref: '#/components/schemas/UpdatableProduct'
            debug:
              allOf:
                - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    UpdateProductResponse:
      description: The structure to respond to a request with an updating product information
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseResponse'
        - type: object
          properties:
            updateProduct:
              $ref: '#/components/schemas/ResponseProduct'

    DeleteProductRequest:
      description: The structure to request for delete product
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseRequest'
        - type: object
          properties:
            deleteProductId:
              type: string
            debug:
              allOf:
                - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    DeleteProductResponse:
      description: The structure to respond to a request with a deleting product
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseResponse'
        - type: object
          properties:
            deleteProduct:
              $ref: '#/components/schemas/ResponseProduct'

    SearchProductRequest:
      description: The structure to request for search products
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseRequest'
        - type: object
          properties:
            query:
              type: string
            debug:
              allOf:
                - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    SearchProductResponse:
      description: The structure to respond to a request with query string
      allOf:
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseMessage'
        - $ref: './spec-fitChanges-api.yaml#/components/schemas/BaseResponse'
        - type: object
          properties:
            foundProducts:
              type: array
              items:
                $ref: '#/components/schemas/ResponseProduct'